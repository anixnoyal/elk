#!/bin/bash

# Backup existing Sendmail configuration
cp /etc/mail/sendmail.cf /etc/mail/sendmail.cf.backup

# Check if sendmail.mc exists
if [[ ! -f /etc/mail/sendmail.mc ]]; then
    echo "Error: sendmail.mc not found!"
    exit 1
fi

# 1. Block email without a sender address
if ! grep -q "LOCAL_CONFIG" /etc/mail/sendmail.mc; then
    echo "LOCAL_CONFIG" >> /etc/mail/sendmail.mc
fi

# Add rule to block emails without a sender address
if ! grep -q "R^$* \$#error \$@ 5.1.0 \$: \"Sender address required\"" /etc/mail/sendmail.mc; then
    echo "LOCAL_RULESETS" >> /etc/mail/sendmail.mc
    echo "SLocal_check_mail" >> /etc/mail/sendmail.mc
    echo "R^$* \$#error \$@ 5.1.0 \$: \"Sender address required\"" >> /etc/mail/sendmail.mc
fi

# 2. Block email to send from user@hostname
# First, get the hostname
HOSTNAME=$(hostname)
if ! grep -q "R${HOSTNAME}" /etc/mail/sendmail.mc; then
    echo "LOCAL_RULESETS" >> /etc/mail/sendmail.mc
    echo "SLocal_check_mail" >> /etc/mail/sendmail.mc
    echo "R${HOSTNAME} \$#error \$@ 5.7.1 \$: \"Sending from user@hostname is prohibited\"" >> /etc/mail/sendmail.mc
fi

# Rebuild the sendmail.cf file
m4 /etc/mail/sendmail.mc > /etc/mail/sendmail.cf

# Restart Sendmail
systemctl restart sendmail

echo "Configurations applied successfully!"
######################################################

#!/bin/bash

# Step 1: Backup all sendmail configurations
backup_dir="/etc/mail/backup_$(date +%F_%T)"
mkdir -p "$backup_dir"
cp /etc/mail/sendmail.cf "$backup_dir/sendmail.cf.backup"
cp /etc/mail/sendmail.mc "$backup_dir/sendmail.mc.backup"

# Step 2: Block sending emails if sender information is blank
cat <<EOF >> /etc/mail/sendmail.mc
LOCAL_CONFIG
F{BlankEnvelope} ^<>
LOCAL_RULESETS
Scheck_mail
R$* <@ $* > $*               $@ OK
R$+                         $: $(macro {BlankEnvelope} $1 $)
R$* <@ $* > $*               $@ OK
R<>                         $#error $@ 5.0.0 $: "550 No sender, message refused"
EOF

# Step 3: Block if to address is empty
# Add rules to check for empty recipient
cat <<EOF >> /etc/mail/sendmail.mc
Scheck_rcpt
R$*                         $#error $@ 5.1.1 $: "550 Recipient address is required"
EOF

# Generate the sendmail.cf from sendmail.mc
m4 /etc/mail/sendmail.mc > /etc/mail/sendmail.cf

# Restart Sendmail for changes to take effect
systemctl restart sendmail

echo "Sendmail configuration updated and service restarted."





#!/bin/bash

# Check if the script is run as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit 1
fi

# Task 1: Update MSP value in submit.mc
MSP_CONFIG="FEATURE(\`msp', \`[127.0.0.1]')dnl"
SUBMIT_MC_FILE="/etc/mail/submit.mc"

# Remove existing MSP line if it exists
sed -i '/FEATURE(`msp/d' "$SUBMIT_MC_FILE"

# Add new MSP line
echo "$MSP_CONFIG" >> "$SUBMIT_MC_FILE"

# Task 2: Update /etc/sysconfig/sendmail
SYSCONFIG_FILE="/etc/sysconfig/sendmail"

echo "DAEMON=no" >> "$SYSCONFIG_FILE"
echo "QUEUE=5m" >> "$SYSCONFIG_FILE"

# Task 3: Check smart host config in sendmail.mc
SMART_HOST_CONFIG="define(\`SMART_HOST', \`mysmtp.text.com')dnl"
SENDMAIL_MC_FILE="/etc/mail/sendmail.mc"

# Check if SMART_HOST is already defined
if grep -q "define(\`SMART_HOST" "$SENDMAIL_MC_FILE"; then
  echo "SMART_HOST already configured in sendmail.mc"
else
  echo "$SMART_HOST_CONFIG" >> "$SENDMAIL_MC_FILE"
fi

# You'll typically need to rebuild the sendmail configuration after these changes
make -C /etc/mail

# Finally, you might also need to restart the sendmail service for changes to take effect
# systemctl restart sendmail

echo "Configuration updated successfully."



#!/bin/bash

# Check for root permissions
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root."
  exit 1
fi

# File path
ALIASES_FILE="/etc/aliases"

# Back up existing /etc/aliases file
cp ${ALIASES_FILE} ${ALIASES_FILE}.backup

# Update or append postmaster, jenkins, and root aliases
for user in postmaster jenkins root; do
    if grep -q "^${user}:" ${ALIASES_FILE}; then
        # Update existing line
        sed -i "s/^${user}:.*$/${user}:   \/dev\/null/" ${ALIASES_FILE}
    else
        # Append new line
        echo "${user}:   /dev/null" >> ${ALIASES_FILE}
    fi
done

# Update the aliases database
newaliases

echo "Aliases updated successfully."
